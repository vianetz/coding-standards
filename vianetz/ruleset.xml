<?xml version="1.0"?>
<ruleset name="vianetz">
    <!-- This coding standard is based on the Zend and Doctrine Coding Standards but enhanced with several Sniffs
        from existing standards
        @see https://github.com/slevomat/coding-standard
        @see https://github.com/doctrine/coding-standard/blob/master/lib/Doctrine/ruleset.xml
        @see https://github.com/zendframework/zend-coding-standard/blob/master/ruleset.xml
        @see https://github.com/squizlabs/PHP_CodeSniffer/blob/master/src/Standards/Squiz/ruleset.xml
        -->
    <description>The coding standard for vianetz projects.</description>

    <rule ref="Doctrine">
        <!-- We want to allow Exception suffix -->
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix"/>
        <exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.ControlStructureSpacing.IncorrectLinesCountBeforeControlStructure"/>
        <exclude name="SlevomatCodingStandard.Commenting.ForbiddenAnnotations.AnnotationForbidden"/>
        <exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName"/>
        <exclude name="SlevomatCodingStandard.Commenting.DocCommentSpacing.IncorrectAnnotationsGroup" />
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing">
        <properties>
            <property name="spacesCountBeforeColon" value="0"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes" />

    <!-- Force no whitespace after a type cast -->
    <rule ref="Generic.Formatting.SpaceAfterCast">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>

    <!-- Include the whole PSR12 standards -->
    <rule ref="PSR12">
        <!-- Exclude requirement for newline at the end of file -->
        <exclude name="PSR2.Files.EndFileNewline" />
        <exclude name="PSR12.Files.FileHeader.SpacingAfterBlock" />
        <exclude name="PSR12.Files.FileHeader.IncorrectOrder" />
        <exclude name="Squiz.Commenting.FileComment.Missing"/>
        <exclude name="Squiz.Commenting.ClassComment.Missing"/>
        <exclude name="Squiz.Commenting.FileComment.CopyrightTagOrder"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
        <exclude name="Squiz.Commenting.FileComment.IncorrectCopyright"/>
        <exclude name="Squiz.Commenting.VariableComment.Missing"/>
        <exclude name="Squiz.Commenting.VariableComment.IncorrectVarType"/>

        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSame"/>
        <exclude name="PSR12.ControlStructures.ControlStructureSpacing.FirstExpressionLine"/>
        <exclude name="PSR12.ControlStructures.ControlStructureSpacing.CloseParenthesisLine"/>
    </rule>

    <!-- Lines can be 180 chars long, but never show errors -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="200"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!-- Use warnings for inline control structures -->
    <rule ref="Generic.ControlStructures.InlineControlStructure">
        <properties>
            <property name="error" value="false"/>
        </properties>
    </rule>

    <!-- PHP code MUST NOT contain any character before the opening tag -->
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>

    <!-- Include some of the Squiz standard -->
    <rule ref="Squiz.Commenting.ClassComment">
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed" />
    </rule>
    <rule ref="Squiz.Commenting.FileComment">
        <exclude name="Squiz.Commenting.FileComment.MissingSubpackageTag" />
        <exclude name="Squiz.Commenting.FileComment.PackageTagOrder" />
        <exclude name="Squiz.Commenting.FileComment.SubpackageTagOrder" />
        <exclude name="Squiz.Commenting.FileComment.IncorrectAuthor" />
        <exclude name="Squiz.Commenting.FileComment.AuthorTagOrder" />
        <exclude name="Squiz.Commenting.FileComment.MissingCopyrightTag" />
    </rule>
    <!-- Unfortunately rules for comments are very strict (e.g. full stop at the end, etc. so leaving this for the moment..) -->
    <!--<rule ref="Squiz.Commenting.FunctionComment" />-->
    <rule ref="Squiz.Commenting.VariableComment" />

    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
    <rule ref="Zend.Debug.CodeAnalyzer"/>

    <!-- Tweaks to metrics -->
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="10"/>
            <property name="absoluteComplexity" value="100"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="5"/>
            <property name="absoluteNestingLevel" value="50"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="linesCountBeforeDeclare" value="0"/>
        </properties>
    </rule>
</ruleset>
